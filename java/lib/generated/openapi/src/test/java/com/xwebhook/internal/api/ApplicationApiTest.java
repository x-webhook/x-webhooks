/*
 * Xwebhook API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xwebhook.internal.api;

import com.xwebhook.internal.ApiException;
import com.xwebhook.models.ApplicationIn;
import com.xwebhook.models.ApplicationOut;
import com.xwebhook.models.ApplicationPatch;
import com.xwebhook.models.ApplicationStats;
import com.xwebhook.models.HTTPValidationError;
import com.xwebhook.models.HttpErrorOut;
import com.xwebhook.models.ListResponseApplicationOut;
import com.xwebhook.models.ListResponseApplicationStats;
import java.time.OffsetDateTime;
import com.xwebhook.models.Ordering;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationApi
 */
@Ignore
public class ApplicationApiTest {

    private final ApplicationApi api = new ApplicationApi();

    
    /**
     * Get App Usage Stats
     *
     * Get basic statistics for all applications.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppUsageStatsApiV1AppStatsUsageGetTest() throws ApiException {
        OffsetDateTime since = null;
        OffsetDateTime until = null;
        Integer limit = null;
        String iterator = null;
        ListResponseApplicationStats response = api.getAppUsageStatsApiV1AppStatsUsageGet(since, until, limit, iterator);

        // TODO: test validations
    }
    
    /**
     * Create Application
     *
     * Create a new application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApplicationCreateTest() throws ApiException {
        ApplicationIn applicationIn = null;
        Boolean getIfExists = null;
        String idempotencyKey = null;
        ApplicationOut response = api.v1ApplicationCreate(applicationIn, getIfExists, idempotencyKey);

        // TODO: test validations
    }
    
    /**
     * Delete Application
     *
     * Delete an application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApplicationDeleteTest() throws ApiException {
        String appId = null;
        api.v1ApplicationDelete(appId);

        // TODO: test validations
    }
    
    /**
     * Get Application
     *
     * Get an application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApplicationGetTest() throws ApiException {
        String appId = null;
        ApplicationOut response = api.v1ApplicationGet(appId);

        // TODO: test validations
    }
    
    /**
     * Get App Stats
     *
     * Get basic statistics for the application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApplicationGetStatsTest() throws ApiException {
        OffsetDateTime since = null;
        OffsetDateTime until = null;
        String appId = null;
        ApplicationStats response = api.v1ApplicationGetStats(since, until, appId);

        // TODO: test validations
    }
    
    /**
     * List Applications
     *
     * List of all the organization&#39;s applications.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApplicationListTest() throws ApiException {
        Integer limit = null;
        String iterator = null;
        Ordering order = null;
        ListResponseApplicationOut response = api.v1ApplicationList(limit, iterator, order);

        // TODO: test validations
    }
    
    /**
     * Patch Application
     *
     * Partially update an application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApplicationPatchTest() throws ApiException {
        String appId = null;
        ApplicationPatch applicationPatch = null;
        ApplicationOut response = api.v1ApplicationPatch(appId, applicationPatch);

        // TODO: test validations
    }
    
    /**
     * Update Application
     *
     * Update an application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApplicationUpdateTest() throws ApiException {
        String appId = null;
        ApplicationIn applicationIn = null;
        ApplicationOut response = api.v1ApplicationUpdate(appId, applicationIn);

        // TODO: test validations
    }
    
}
