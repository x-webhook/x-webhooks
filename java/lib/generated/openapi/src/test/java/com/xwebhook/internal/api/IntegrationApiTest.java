/*
 * Xwebhook API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xwebhook.internal.api;

import com.xwebhook.internal.ApiException;
import com.xwebhook.models.HTTPValidationError;
import com.xwebhook.models.HttpErrorOut;
import com.xwebhook.models.IntegrationIn;
import com.xwebhook.models.IntegrationKeyOut;
import com.xwebhook.models.IntegrationOut;
import com.xwebhook.models.IntegrationUpdate;
import com.xwebhook.models.ListResponseIntegrationOut;
import com.xwebhook.models.Ordering;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IntegrationApi
 */
@Ignore
public class IntegrationApiTest {

    private final IntegrationApi api = new IntegrationApi();

    
    /**
     * Create Integration
     *
     * Create an integration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1IntegrationCreateTest() throws ApiException {
        String appId = null;
        IntegrationIn integrationIn = null;
        String idempotencyKey = null;
        IntegrationOut response = api.v1IntegrationCreate(appId, integrationIn, idempotencyKey);

        // TODO: test validations
    }
    
    /**
     * Delete Integration
     *
     * Delete an integration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1IntegrationDeleteTest() throws ApiException {
        String appId = null;
        String integId = null;
        api.v1IntegrationDelete(appId, integId);

        // TODO: test validations
    }
    
    /**
     * Get Integration
     *
     * Get an integration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1IntegrationGetTest() throws ApiException {
        String appId = null;
        String integId = null;
        IntegrationOut response = api.v1IntegrationGet(appId, integId);

        // TODO: test validations
    }
    
    /**
     * Get Integration Key
     *
     * Get an integration&#39;s key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1IntegrationGetKeyTest() throws ApiException {
        String appId = null;
        String integId = null;
        IntegrationKeyOut response = api.v1IntegrationGetKey(appId, integId);

        // TODO: test validations
    }
    
    /**
     * List Integrations
     *
     * List the application&#39;s integrations.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1IntegrationListTest() throws ApiException {
        String appId = null;
        Integer limit = null;
        String iterator = null;
        Ordering order = null;
        ListResponseIntegrationOut response = api.v1IntegrationList(appId, limit, iterator, order);

        // TODO: test validations
    }
    
    /**
     * Rotate Integration Key
     *
     * Rotate the integration&#39;s key. The previous key will be immediately revoked.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1IntegrationRotateKeyTest() throws ApiException {
        String appId = null;
        String integId = null;
        String idempotencyKey = null;
        IntegrationKeyOut response = api.v1IntegrationRotateKey(appId, integId, idempotencyKey);

        // TODO: test validations
    }
    
    /**
     * Update Integration
     *
     * Update an integration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1IntegrationUpdateTest() throws ApiException {
        String appId = null;
        String integId = null;
        IntegrationUpdate integrationUpdate = null;
        IntegrationOut response = api.v1IntegrationUpdate(appId, integId, integrationUpdate);

        // TODO: test validations
    }
    
}
