/*
 * Xwebhook API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xwebhook.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.xwebhook.models.CustomColorPalette;
import com.xwebhook.models.CustomThemeOverride;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for SettingsOut
 */
public class SettingsOutTest {
    private final SettingsOut model = new SettingsOut();

    /**
     * Model tests for SettingsOut
     */
    @Test
    public void testSettingsOut() {
        // TODO: test SettingsOut
    }

    /**
     * Test the property 'colorPaletteDark'
     */
    @Test
    public void colorPaletteDarkTest() {
        // TODO: test colorPaletteDark
    }

    /**
     * Test the property 'colorPaletteLight'
     */
    @Test
    public void colorPaletteLightTest() {
        // TODO: test colorPaletteLight
    }

    /**
     * Test the property 'customBaseFontSize'
     */
    @Test
    public void customBaseFontSizeTest() {
        // TODO: test customBaseFontSize
    }

    /**
     * Test the property 'customColor'
     */
    @Test
    public void customColorTest() {
        // TODO: test customColor
    }

    /**
     * Test the property 'customFontFamily'
     */
    @Test
    public void customFontFamilyTest() {
        // TODO: test customFontFamily
    }

    /**
     * Test the property 'customFontFamilyUrl'
     */
    @Test
    public void customFontFamilyUrlTest() {
        // TODO: test customFontFamilyUrl
    }

    /**
     * Test the property 'customLogoUrl'
     */
    @Test
    public void customLogoUrlTest() {
        // TODO: test customLogoUrl
    }

    /**
     * Test the property 'customThemeOverride'
     */
    @Test
    public void customThemeOverrideTest() {
        // TODO: test customThemeOverride
    }

    /**
     * Test the property 'disableEndpointOnFailure'
     */
    @Test
    public void disableEndpointOnFailureTest() {
        // TODO: test disableEndpointOnFailure
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'enableChannels'
     */
    @Test
    public void enableChannelsTest() {
        // TODO: test enableChannels
    }

    /**
     * Test the property 'enableIntegrationManagement'
     */
    @Test
    public void enableIntegrationManagementTest() {
        // TODO: test enableIntegrationManagement
    }

    /**
     * Test the property 'enableTransformations'
     */
    @Test
    public void enableTransformationsTest() {
        // TODO: test enableTransformations
    }

    /**
     * Test the property 'enforceHttps'
     */
    @Test
    public void enforceHttpsTest() {
        // TODO: test enforceHttps
    }

    /**
     * Test the property 'eventCatalogPublished'
     */
    @Test
    public void eventCatalogPublishedTest() {
        // TODO: test eventCatalogPublished
    }

    /**
     * Test the property 'readOnly'
     */
    @Test
    public void readOnlyTest() {
        // TODO: test readOnly
    }

    /**
     * Test the property 'showUseXwebhookPlay'
     */
    @Test
    public void showUseXwebhookPlayTest() {
        // TODO: test showUseXwebhookPlay
    }

}
