/*
 * Xwebhook API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.xwebhook.internal.api;

import io.openweb3.xwebhook.internal.ApiException;
import io.openweb3.xwebhook.models.GenerateIn;
import io.openweb3.xwebhook.models.GenerateOut;
import io.openweb3.xwebhook.models.HTTPValidationError;
import io.openweb3.xwebhook.models.HttpErrorOut;
import io.openweb3.xwebhook.models.HubspotOauthConfigIn;
import io.openweb3.xwebhook.models.IncomingWebhookPayloadOut;
import io.openweb3.xwebhook.models.ListResponseTemplateOut;
import io.openweb3.xwebhook.models.OAuthPayloadIn;
import io.openweb3.xwebhook.models.OAuthPayloadOut;
import io.openweb3.xwebhook.models.Ordering;
import io.openweb3.xwebhook.models.TemplateIn;
import io.openweb3.xwebhook.models.TemplateOut;
import io.openweb3.xwebhook.models.TemplatePatch;
import io.openweb3.xwebhook.models.TemplateUpdate;
import io.openweb3.xwebhook.models.TransformationSimulateIn;
import io.openweb3.xwebhook.models.TransformationSimulateOut;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransformationTemplateApi
 */
@Ignore
public class TransformationTemplateApiTest {

    private final TransformationTemplateApi api = new TransformationTemplateApi();

    
    /**
     * Update Hubspot Oauth Config
     *
     * Create/update endpoint Hubsport OAuth configuration Specific private endpoint just for us, to avoid exposing the Hubspot secret to the client.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1EndpointUpdateHubspotOauthConfigTest() throws ApiException {
        String appId = null;
        String endpointId = null;
        HubspotOauthConfigIn hubspotOauthConfigIn = null;
        api.v1EndpointUpdateHubspotOauthConfig(appId, endpointId, hubspotOauthConfigIn);

        // TODO: test validations
    }
    
    /**
     * Create Transformation Template
     *
     * Create a new transformation template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TransformationTemplateCreateTest() throws ApiException {
        TemplateIn templateIn = null;
        String idempotencyKey = null;
        TemplateOut response = api.v1TransformationTemplateCreate(templateIn, idempotencyKey);

        // TODO: test validations
    }
    
    /**
     * Delete Transformation Template
     *
     * Delete a transformation template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TransformationTemplateDeleteTest() throws ApiException {
        String transformationTemplateId = null;
        api.v1TransformationTemplateDelete(transformationTemplateId);

        // TODO: test validations
    }
    
    /**
     * Generate
     *
     * Use OpenAI&#39;s Completion API to generate code for a transformation template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TransformationTemplateGenerateTest() throws ApiException {
        GenerateIn generateIn = null;
        String idempotencyKey = null;
        GenerateOut response = api.v1TransformationTemplateGenerate(generateIn, idempotencyKey);

        // TODO: test validations
    }
    
    /**
     * Get Transformation Template
     *
     * Get a transformation template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TransformationTemplateGetTest() throws ApiException {
        String transformationTemplateId = null;
        TemplateOut response = api.v1TransformationTemplateGet(transformationTemplateId);

        // TODO: test validations
    }
    
    /**
     * List Transformation Templates
     *
     * List all transformation templates for an application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TransformationTemplateListTest() throws ApiException {
        Integer limit = null;
        String iterator = null;
        Ordering order = null;
        ListResponseTemplateOut response = api.v1TransformationTemplateList(limit, iterator, order);

        // TODO: test validations
    }
    
    /**
     * Authorize Discord
     *
     * Get Discord Incoming webhook URL
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TransformationTemplateOauthDiscordTest() throws ApiException {
        OAuthPayloadIn oauthPayloadIn = null;
        String idempotencyKey = null;
        IncomingWebhookPayloadOut response = api.v1TransformationTemplateOauthDiscord(oauthPayloadIn, idempotencyKey);

        // TODO: test validations
    }
    
    /**
     * Authorize Hubspot
     *
     * Get Hubspot access token using authorization code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TransformationTemplateOauthHubspotTest() throws ApiException {
        OAuthPayloadIn oauthPayloadIn = null;
        String idempotencyKey = null;
        OAuthPayloadOut response = api.v1TransformationTemplateOauthHubspot(oauthPayloadIn, idempotencyKey);

        // TODO: test validations
    }
    
    /**
     * Authorize Slack
     *
     * Get Slack Incoming webhook URL
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TransformationTemplateOauthSlackTest() throws ApiException {
        OAuthPayloadIn oauthPayloadIn = null;
        String idempotencyKey = null;
        IncomingWebhookPayloadOut response = api.v1TransformationTemplateOauthSlack(oauthPayloadIn, idempotencyKey);

        // TODO: test validations
    }
    
    /**
     * Patch Transformation Template
     *
     * Partially update a transformation template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TransformationTemplatePatchTest() throws ApiException {
        String transformationTemplateId = null;
        TemplatePatch templatePatch = null;
        TemplateOut response = api.v1TransformationTemplatePatch(transformationTemplateId, templatePatch);

        // TODO: test validations
    }
    
    /**
     * Simulate
     *
     * Simulate running the transformation on the payload and code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TransformationTemplateSimulateTest() throws ApiException {
        TransformationSimulateIn transformationSimulateIn = null;
        String idempotencyKey = null;
        TransformationSimulateOut response = api.v1TransformationTemplateSimulate(transformationSimulateIn, idempotencyKey);

        // TODO: test validations
    }
    
    /**
     * Update Transformation Template
     *
     * Update a transformation template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TransformationTemplateUpdateTest() throws ApiException {
        String transformationTemplateId = null;
        TemplateUpdate templateUpdate = null;
        TemplateOut response = api.v1TransformationTemplateUpdate(transformationTemplateId, templateUpdate);

        // TODO: test validations
    }
    
}
