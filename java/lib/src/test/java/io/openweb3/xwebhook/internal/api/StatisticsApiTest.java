/*
 * Xwebhook API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.xwebhook.internal.api;

import io.openweb3.xwebhook.internal.ApiException;
import io.openweb3.xwebhook.models.AggregateEventTypesOut;
import io.openweb3.xwebhook.models.AppUsageStatsIn;
import io.openweb3.xwebhook.models.AppUsageStatsOut;
import io.openweb3.xwebhook.models.AttemptStatisticsResponse;
import io.openweb3.xwebhook.models.HTTPValidationError;
import io.openweb3.xwebhook.models.HttpErrorOut;
import java.time.OffsetDateTime;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StatisticsApi
 */
@Ignore
public class StatisticsApiTest {

    private final StatisticsApi api = new StatisticsApi();

    
    /**
     * Aggregate App Stats
     *
     * Creates a background task to calculate the message destinations for all applications in the environment.  Note that this endpoint is asynchronous. You will need to poll the &#x60;Get Background Task&#x60; endpoint to retrieve the results of the operation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1StatisticsAggregateAppStatsTest() throws ApiException {
        AppUsageStatsIn appUsageStatsIn = null;
        String idempotencyKey = null;
        AppUsageStatsOut response = api.v1StatisticsAggregateAppStats(appUsageStatsIn, idempotencyKey);

        // TODO: test validations
    }
    
    /**
     * Aggregate Event Types
     *
     * Creates a background task to calculate the listed event types for all apps in the organization.  Note that this endpoint is asynchronous. You will need to poll the &#x60;Get Background Task&#x60; endpoint to retrieve the results of the operation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1StatisticsAggregateEventTypesTest() throws ApiException {
        AggregateEventTypesOut response = api.v1StatisticsAggregateEventTypes();

        // TODO: test validations
    }
    
    /**
     * Get App Attempt Stats
     *
     * Returns application-level statistics on message attempts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1StatsAppAttemptsTest() throws ApiException {
        String appId = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        AttemptStatisticsResponse response = api.v1StatsAppAttempts(appId, startDate, endDate);

        // TODO: test validations
    }
    
    /**
     * Get Ep Stats
     *
     * Returns endpoint-level statistics on message attempts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1StatsEndpointAttemptsTest() throws ApiException {
        String appId = null;
        String endpointId = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        AttemptStatisticsResponse response = api.v1StatsEndpointAttempts(appId, endpointId, startDate, endDate);

        // TODO: test validations
    }
    
}
