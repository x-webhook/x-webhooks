/*
 * Xwebhook API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.xwebhook.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.openweb3.xwebhook.models.MessageStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

/**
 * A model containing information on a given message plus additional fields on the last attempt for that message.
 */
@ApiModel(description = "A model containing information on a given message plus additional fields on the last attempt for that message.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-18T01:36:53.552111+08:00[Asia/Shanghai]")
public class EndpointMessageOut {
  public static final String SERIALIZED_NAME_CHANNELS = "channels";
  @SerializedName(SERIALIZED_NAME_CHANNELS)
  private Set<String> channels = null;

  public static final String SERIALIZED_NAME_EVENT_ID = "eventId";
  @SerializedName(SERIALIZED_NAME_EVENT_ID)
  private String eventId;

  public static final String SERIALIZED_NAME_EVENT_TYPE = "eventType";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE)
  private String eventType;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NEXT_ATTEMPT = "nextAttempt";
  @SerializedName(SERIALIZED_NAME_NEXT_ATTEMPT)
  private OffsetDateTime nextAttempt;

  public static final String SERIALIZED_NAME_PAYLOAD = "payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private Object payload;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private MessageStatus status;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Set<String> tags = null;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private OffsetDateTime timestamp;


  public EndpointMessageOut channels(Set<String> channels) {
    
    this.channels = channels;
    return this;
  }

  public EndpointMessageOut addChannelsItem(String channelsItem) {
    if (this.channels == null) {
      this.channels = new LinkedHashSet<>();
    }
    this.channels.add(channelsItem);
    return this;
  }

   /**
   * List of free-form identifiers that endpoints can filter by
   * @return channels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"project_123\",\"group_2\"]", value = "List of free-form identifiers that endpoints can filter by")

  public Set<String> getChannels() {
    return channels;
  }


  public void setChannels(Set<String> channels) {
    this.channels = channels;
  }


  public EndpointMessageOut eventId(String eventId) {
    
    this.eventId = eventId;
    return this;
  }

   /**
   * Optional unique identifier for the message
   * @return eventId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "unique-msg-identifier", value = "Optional unique identifier for the message")

  public String getEventId() {
    return eventId;
  }


  public void setEventId(String eventId) {
    this.eventId = eventId;
  }


  public EndpointMessageOut eventType(String eventType) {
    
    this.eventType = eventType;
    return this;
  }

   /**
   * The event type&#39;s name
   * @return eventType
  **/
  @ApiModelProperty(example = "user.signup", required = true, value = "The event type's name")

  public String getEventType() {
    return eventType;
  }


  public void setEventType(String eventType) {
    this.eventType = eventType;
  }


  public EndpointMessageOut id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The msg&#39;s ID
   * @return id
  **/
  @ApiModelProperty(example = "msg_1srOrx2ZWZBpBUvZwXKQmoEYga2", required = true, value = "The msg's ID")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EndpointMessageOut nextAttempt(OffsetDateTime nextAttempt) {
    
    this.nextAttempt = nextAttempt;
    return this;
  }

   /**
   * Get nextAttempt
   * @return nextAttempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getNextAttempt() {
    return nextAttempt;
  }


  public void setNextAttempt(OffsetDateTime nextAttempt) {
    this.nextAttempt = nextAttempt;
  }


  public EndpointMessageOut payload(Object payload) {
    
    this.payload = payload;
    return this;
  }

   /**
   * Get payload
   * @return payload
  **/
  @ApiModelProperty(example = "{\"email\":\"test@example.com\",\"type\":\"user.created\",\"username\":\"test_user\"}", required = true, value = "")

  public Object getPayload() {
    return payload;
  }


  public void setPayload(Object payload) {
    this.payload = payload;
  }


  public EndpointMessageOut status(MessageStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")

  public MessageStatus getStatus() {
    return status;
  }


  public void setStatus(MessageStatus status) {
    this.status = status;
  }


  public EndpointMessageOut tags(Set<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public EndpointMessageOut addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new LinkedHashSet<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<String> getTags() {
    return tags;
  }


  public void setTags(Set<String> tags) {
    this.tags = tags;
  }


  public EndpointMessageOut timestamp(OffsetDateTime timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getTimestamp() {
    return timestamp;
  }


  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EndpointMessageOut endpointMessageOut = (EndpointMessageOut) o;
    return Objects.equals(this.channels, endpointMessageOut.channels) &&
        Objects.equals(this.eventId, endpointMessageOut.eventId) &&
        Objects.equals(this.eventType, endpointMessageOut.eventType) &&
        Objects.equals(this.id, endpointMessageOut.id) &&
        Objects.equals(this.nextAttempt, endpointMessageOut.nextAttempt) &&
        Objects.equals(this.payload, endpointMessageOut.payload) &&
        Objects.equals(this.status, endpointMessageOut.status) &&
        Objects.equals(this.tags, endpointMessageOut.tags) &&
        Objects.equals(this.timestamp, endpointMessageOut.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channels, eventId, eventType, id, nextAttempt, payload, status, tags, timestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EndpointMessageOut {\n");
    sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    nextAttempt: ").append(toIndentedString(nextAttempt)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

