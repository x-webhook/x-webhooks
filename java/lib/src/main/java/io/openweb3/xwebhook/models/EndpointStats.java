/*
 * Xwebhook API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.xwebhook.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EndpointStats
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-08T17:18:16.954530+08:00[Asia/Shanghai]")
public class EndpointStats {
  public static final String SERIALIZED_NAME_FAIL = "fail";
  @SerializedName(SERIALIZED_NAME_FAIL)
  private Long fail;

  public static final String SERIALIZED_NAME_PENDING = "pending";
  @SerializedName(SERIALIZED_NAME_PENDING)
  private Long pending;

  public static final String SERIALIZED_NAME_SENDING = "sending";
  @SerializedName(SERIALIZED_NAME_SENDING)
  private Long sending;

  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Long success;


  public EndpointStats fail(Long fail) {
    
    this.fail = fail;
    return this;
  }

   /**
   * Get fail
   * @return fail
  **/
  @ApiModelProperty(required = true, value = "")

  public Long getFail() {
    return fail;
  }


  public void setFail(Long fail) {
    this.fail = fail;
  }


  public EndpointStats pending(Long pending) {
    
    this.pending = pending;
    return this;
  }

   /**
   * Get pending
   * @return pending
  **/
  @ApiModelProperty(required = true, value = "")

  public Long getPending() {
    return pending;
  }


  public void setPending(Long pending) {
    this.pending = pending;
  }


  public EndpointStats sending(Long sending) {
    
    this.sending = sending;
    return this;
  }

   /**
   * Get sending
   * @return sending
  **/
  @ApiModelProperty(required = true, value = "")

  public Long getSending() {
    return sending;
  }


  public void setSending(Long sending) {
    this.sending = sending;
  }


  public EndpointStats success(Long success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @ApiModelProperty(required = true, value = "")

  public Long getSuccess() {
    return success;
  }


  public void setSuccess(Long success) {
    this.success = success;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EndpointStats endpointStats = (EndpointStats) o;
    return Objects.equals(this.fail, endpointStats.fail) &&
        Objects.equals(this.pending, endpointStats.pending) &&
        Objects.equals(this.sending, endpointStats.sending) &&
        Objects.equals(this.success, endpointStats.success);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fail, pending, sending, success);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EndpointStats {\n");
    sb.append("    fail: ").append(toIndentedString(fail)).append("\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("    sending: ").append(toIndentedString(sending)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

