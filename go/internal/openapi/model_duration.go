/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Duration struct for Duration
type Duration struct {
	Nanos int32 `json:"nanos"`
	Secs int32 `json:"secs"`
}

// NewDuration instantiates a new Duration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDuration(nanos int32, secs int32) *Duration {
	this := Duration{}
	this.Nanos = nanos
	this.Secs = secs
	return &this
}

// NewDurationWithDefaults instantiates a new Duration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDurationWithDefaults() *Duration {
	this := Duration{}
	return &this
}

// GetNanos returns the Nanos field value
func (o *Duration) GetNanos() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Nanos
}

// GetNanosOk returns a tuple with the Nanos field value
// and a boolean to check if the value has been set.
func (o *Duration) GetNanosOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Nanos, true
}

// SetNanos sets field value
func (o *Duration) SetNanos(v int32) {
	o.Nanos = v
}

// GetSecs returns the Secs field value
func (o *Duration) GetSecs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Secs
}

// GetSecsOk returns a tuple with the Secs field value
// and a boolean to check if the value has been set.
func (o *Duration) GetSecsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Secs, true
}

// SetSecs sets field value
func (o *Duration) SetSecs(v int32) {
	o.Secs = v
}

func (o Duration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["nanos"] = o.Nanos
	}
	if true {
		toSerialize["secs"] = o.Secs
	}
	return json.Marshal(toSerialize)
}

type NullableDuration struct {
	value *Duration
	isSet bool
}

func (v NullableDuration) Get() *Duration {
	return v.value
}

func (v *NullableDuration) Set(val *Duration) {
	v.value = val
	v.isSet = true
}

func (v NullableDuration) IsSet() bool {
	return v.isSet
}

func (v *NullableDuration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDuration(val *Duration) *NullableDuration {
	return &NullableDuration{value: val, isSet: true}
}

func (v NullableDuration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDuration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


