/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GenerateIn struct for GenerateIn
type GenerateIn struct {
	Prompt string `json:"prompt"`
}

// NewGenerateIn instantiates a new GenerateIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateIn(prompt string) *GenerateIn {
	this := GenerateIn{}
	this.Prompt = prompt
	return &this
}

// NewGenerateInWithDefaults instantiates a new GenerateIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateInWithDefaults() *GenerateIn {
	this := GenerateIn{}
	return &this
}

// GetPrompt returns the Prompt field value
func (o *GenerateIn) GetPrompt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Prompt
}

// GetPromptOk returns a tuple with the Prompt field value
// and a boolean to check if the value has been set.
func (o *GenerateIn) GetPromptOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Prompt, true
}

// SetPrompt sets field value
func (o *GenerateIn) SetPrompt(v string) {
	o.Prompt = v
}

func (o GenerateIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["prompt"] = o.Prompt
	}
	return json.Marshal(toSerialize)
}

type NullableGenerateIn struct {
	value *GenerateIn
	isSet bool
}

func (v NullableGenerateIn) Get() *GenerateIn {
	return v.value
}

func (v *NullableGenerateIn) Set(val *GenerateIn) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateIn) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateIn(val *GenerateIn) *NullableGenerateIn {
	return &NullableGenerateIn{value: val, isSet: true}
}

func (v NullableGenerateIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


