/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EndpointStats struct for EndpointStats
type EndpointStats struct {
	Fail int64 `json:"fail"`
	Pending int64 `json:"pending"`
	Sending int64 `json:"sending"`
	Success int64 `json:"success"`
}

// NewEndpointStats instantiates a new EndpointStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointStats(fail int64, pending int64, sending int64, success int64) *EndpointStats {
	this := EndpointStats{}
	this.Fail = fail
	this.Pending = pending
	this.Sending = sending
	this.Success = success
	return &this
}

// NewEndpointStatsWithDefaults instantiates a new EndpointStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointStatsWithDefaults() *EndpointStats {
	this := EndpointStats{}
	return &this
}

// GetFail returns the Fail field value
func (o *EndpointStats) GetFail() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Fail
}

// GetFailOk returns a tuple with the Fail field value
// and a boolean to check if the value has been set.
func (o *EndpointStats) GetFailOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Fail, true
}

// SetFail sets field value
func (o *EndpointStats) SetFail(v int64) {
	o.Fail = v
}

// GetPending returns the Pending field value
func (o *EndpointStats) GetPending() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Pending
}

// GetPendingOk returns a tuple with the Pending field value
// and a boolean to check if the value has been set.
func (o *EndpointStats) GetPendingOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Pending, true
}

// SetPending sets field value
func (o *EndpointStats) SetPending(v int64) {
	o.Pending = v
}

// GetSending returns the Sending field value
func (o *EndpointStats) GetSending() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Sending
}

// GetSendingOk returns a tuple with the Sending field value
// and a boolean to check if the value has been set.
func (o *EndpointStats) GetSendingOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Sending, true
}

// SetSending sets field value
func (o *EndpointStats) SetSending(v int64) {
	o.Sending = v
}

// GetSuccess returns the Success field value
func (o *EndpointStats) GetSuccess() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *EndpointStats) GetSuccessOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *EndpointStats) SetSuccess(v int64) {
	o.Success = v
}

func (o EndpointStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fail"] = o.Fail
	}
	if true {
		toSerialize["pending"] = o.Pending
	}
	if true {
		toSerialize["sending"] = o.Sending
	}
	if true {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullableEndpointStats struct {
	value *EndpointStats
	isSet bool
}

func (v NullableEndpointStats) Get() *EndpointStats {
	return v.value
}

func (v *NullableEndpointStats) Set(val *EndpointStats) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointStats) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointStats(val *EndpointStats) *NullableEndpointStats {
	return &NullableEndpointStats{value: val, isSet: true}
}

func (v NullableEndpointStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


