/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EventTypeImportOpenApiOut struct for EventTypeImportOpenApiOut
type EventTypeImportOpenApiOut struct {
	Data EventTypeImportOpenApiOutData `json:"data"`
}

// NewEventTypeImportOpenApiOut instantiates a new EventTypeImportOpenApiOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventTypeImportOpenApiOut(data EventTypeImportOpenApiOutData) *EventTypeImportOpenApiOut {
	this := EventTypeImportOpenApiOut{}
	this.Data = data
	return &this
}

// NewEventTypeImportOpenApiOutWithDefaults instantiates a new EventTypeImportOpenApiOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventTypeImportOpenApiOutWithDefaults() *EventTypeImportOpenApiOut {
	this := EventTypeImportOpenApiOut{}
	return &this
}

// GetData returns the Data field value
func (o *EventTypeImportOpenApiOut) GetData() EventTypeImportOpenApiOutData {
	if o == nil {
		var ret EventTypeImportOpenApiOutData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *EventTypeImportOpenApiOut) GetDataOk() (*EventTypeImportOpenApiOutData, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *EventTypeImportOpenApiOut) SetData(v EventTypeImportOpenApiOutData) {
	o.Data = v
}

func (o EventTypeImportOpenApiOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableEventTypeImportOpenApiOut struct {
	value *EventTypeImportOpenApiOut
	isSet bool
}

func (v NullableEventTypeImportOpenApiOut) Get() *EventTypeImportOpenApiOut {
	return v.value
}

func (v *NullableEventTypeImportOpenApiOut) Set(val *EventTypeImportOpenApiOut) {
	v.value = val
	v.isSet = true
}

func (v NullableEventTypeImportOpenApiOut) IsSet() bool {
	return v.isSet
}

func (v *NullableEventTypeImportOpenApiOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventTypeImportOpenApiOut(val *EventTypeImportOpenApiOut) *NullableEventTypeImportOpenApiOut {
	return &NullableEventTypeImportOpenApiOut{value: val, isSet: true}
}

func (v NullableEventTypeImportOpenApiOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventTypeImportOpenApiOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


