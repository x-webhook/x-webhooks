/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FontSizeConfig struct for FontSizeConfig
type FontSizeConfig struct {
	Base NullableInt32 `json:"base,omitempty"`
}

// NewFontSizeConfig instantiates a new FontSizeConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFontSizeConfig() *FontSizeConfig {
	this := FontSizeConfig{}
	return &this
}

// NewFontSizeConfigWithDefaults instantiates a new FontSizeConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFontSizeConfigWithDefaults() *FontSizeConfig {
	this := FontSizeConfig{}
	return &this
}

// GetBase returns the Base field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FontSizeConfig) GetBase() int32 {
	if o == nil || o.Base.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Base.Get()
}

// GetBaseOk returns a tuple with the Base field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FontSizeConfig) GetBaseOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Base.Get(), o.Base.IsSet()
}

// HasBase returns a boolean if a field has been set.
func (o *FontSizeConfig) HasBase() bool {
	if o != nil && o.Base.IsSet() {
		return true
	}

	return false
}

// SetBase gets a reference to the given NullableInt32 and assigns it to the Base field.
func (o *FontSizeConfig) SetBase(v int32) {
	o.Base.Set(&v)
}
// SetBaseNil sets the value for Base to be an explicit nil
func (o *FontSizeConfig) SetBaseNil() {
	o.Base.Set(nil)
}

// UnsetBase ensures that no value is present for Base, not even an explicit nil
func (o *FontSizeConfig) UnsetBase() {
	o.Base.Unset()
}

func (o FontSizeConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Base.IsSet() {
		toSerialize["base"] = o.Base.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableFontSizeConfig struct {
	value *FontSizeConfig
	isSet bool
}

func (v NullableFontSizeConfig) Get() *FontSizeConfig {
	return v.value
}

func (v *NullableFontSizeConfig) Set(val *FontSizeConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableFontSizeConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableFontSizeConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFontSizeConfig(val *FontSizeConfig) *NullableFontSizeConfig {
	return &NullableFontSizeConfig{value: val, isSet: true}
}

func (v NullableFontSizeConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFontSizeConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


