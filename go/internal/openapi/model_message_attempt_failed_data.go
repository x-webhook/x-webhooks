/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MessageAttemptFailedData struct for MessageAttemptFailedData
type MessageAttemptFailedData struct {
	// The attempt's ID
	Id string `json:"id"`
	ResponseStatusCode int32 `json:"responseStatusCode"`
	Timestamp time.Time `json:"timestamp"`
}

// NewMessageAttemptFailedData instantiates a new MessageAttemptFailedData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageAttemptFailedData(id string, responseStatusCode int32, timestamp time.Time) *MessageAttemptFailedData {
	this := MessageAttemptFailedData{}
	this.Id = id
	this.ResponseStatusCode = responseStatusCode
	this.Timestamp = timestamp
	return &this
}

// NewMessageAttemptFailedDataWithDefaults instantiates a new MessageAttemptFailedData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageAttemptFailedDataWithDefaults() *MessageAttemptFailedData {
	this := MessageAttemptFailedData{}
	return &this
}

// GetId returns the Id field value
func (o *MessageAttemptFailedData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MessageAttemptFailedData) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MessageAttemptFailedData) SetId(v string) {
	o.Id = v
}

// GetResponseStatusCode returns the ResponseStatusCode field value
func (o *MessageAttemptFailedData) GetResponseStatusCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ResponseStatusCode
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value
// and a boolean to check if the value has been set.
func (o *MessageAttemptFailedData) GetResponseStatusCodeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResponseStatusCode, true
}

// SetResponseStatusCode sets field value
func (o *MessageAttemptFailedData) SetResponseStatusCode(v int32) {
	o.ResponseStatusCode = v
}

// GetTimestamp returns the Timestamp field value
func (o *MessageAttemptFailedData) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *MessageAttemptFailedData) GetTimestampOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *MessageAttemptFailedData) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

func (o MessageAttemptFailedData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["responseStatusCode"] = o.ResponseStatusCode
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableMessageAttemptFailedData struct {
	value *MessageAttemptFailedData
	isSet bool
}

func (v NullableMessageAttemptFailedData) Get() *MessageAttemptFailedData {
	return v.value
}

func (v *NullableMessageAttemptFailedData) Set(val *MessageAttemptFailedData) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageAttemptFailedData) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageAttemptFailedData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageAttemptFailedData(val *MessageAttemptFailedData) *NullableMessageAttemptFailedData {
	return &NullableMessageAttemptFailedData{value: val, isSet: true}
}

func (v NullableMessageAttemptFailedData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageAttemptFailedData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


