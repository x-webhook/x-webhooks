/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OAuthPayloadOut struct for OAuthPayloadOut
type OAuthPayloadOut struct {
	AccessToken NullableString `json:"accessToken,omitempty"`
	Error NullableString `json:"error,omitempty"`
	RefreshToken NullableString `json:"refreshToken,omitempty"`
}

// NewOAuthPayloadOut instantiates a new OAuthPayloadOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthPayloadOut() *OAuthPayloadOut {
	this := OAuthPayloadOut{}
	return &this
}

// NewOAuthPayloadOutWithDefaults instantiates a new OAuthPayloadOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthPayloadOutWithDefaults() *OAuthPayloadOut {
	this := OAuthPayloadOut{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OAuthPayloadOut) GetAccessToken() string {
	if o == nil || o.AccessToken.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccessToken.Get()
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OAuthPayloadOut) GetAccessTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccessToken.Get(), o.AccessToken.IsSet()
}

// HasAccessToken returns a boolean if a field has been set.
func (o *OAuthPayloadOut) HasAccessToken() bool {
	if o != nil && o.AccessToken.IsSet() {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given NullableString and assigns it to the AccessToken field.
func (o *OAuthPayloadOut) SetAccessToken(v string) {
	o.AccessToken.Set(&v)
}
// SetAccessTokenNil sets the value for AccessToken to be an explicit nil
func (o *OAuthPayloadOut) SetAccessTokenNil() {
	o.AccessToken.Set(nil)
}

// UnsetAccessToken ensures that no value is present for AccessToken, not even an explicit nil
func (o *OAuthPayloadOut) UnsetAccessToken() {
	o.AccessToken.Unset()
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OAuthPayloadOut) GetError() string {
	if o == nil || o.Error.Get() == nil {
		var ret string
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OAuthPayloadOut) GetErrorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *OAuthPayloadOut) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableString and assigns it to the Error field.
func (o *OAuthPayloadOut) SetError(v string) {
	o.Error.Set(&v)
}
// SetErrorNil sets the value for Error to be an explicit nil
func (o *OAuthPayloadOut) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *OAuthPayloadOut) UnsetError() {
	o.Error.Unset()
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OAuthPayloadOut) GetRefreshToken() string {
	if o == nil || o.RefreshToken.Get() == nil {
		var ret string
		return ret
	}
	return *o.RefreshToken.Get()
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OAuthPayloadOut) GetRefreshTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefreshToken.Get(), o.RefreshToken.IsSet()
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *OAuthPayloadOut) HasRefreshToken() bool {
	if o != nil && o.RefreshToken.IsSet() {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given NullableString and assigns it to the RefreshToken field.
func (o *OAuthPayloadOut) SetRefreshToken(v string) {
	o.RefreshToken.Set(&v)
}
// SetRefreshTokenNil sets the value for RefreshToken to be an explicit nil
func (o *OAuthPayloadOut) SetRefreshTokenNil() {
	o.RefreshToken.Set(nil)
}

// UnsetRefreshToken ensures that no value is present for RefreshToken, not even an explicit nil
func (o *OAuthPayloadOut) UnsetRefreshToken() {
	o.RefreshToken.Unset()
}

func (o OAuthPayloadOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessToken.IsSet() {
		toSerialize["accessToken"] = o.AccessToken.Get()
	}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	if o.RefreshToken.IsSet() {
		toSerialize["refreshToken"] = o.RefreshToken.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOAuthPayloadOut struct {
	value *OAuthPayloadOut
	isSet bool
}

func (v NullableOAuthPayloadOut) Get() *OAuthPayloadOut {
	return v.value
}

func (v *NullableOAuthPayloadOut) Set(val *OAuthPayloadOut) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthPayloadOut) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthPayloadOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthPayloadOut(val *OAuthPayloadOut) *NullableOAuthPayloadOut {
	return &NullableOAuthPayloadOut{value: val, isSet: true}
}

func (v NullableOAuthPayloadOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthPayloadOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


