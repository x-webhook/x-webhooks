/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EndpointDeletedEvent Sent when an endpoint is deleted.
type EndpointDeletedEvent struct {
	Data EndpointDeletedEventData `json:"data"`
	Type string `json:"type"`
}

// NewEndpointDeletedEvent instantiates a new EndpointDeletedEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointDeletedEvent(data EndpointDeletedEventData, type_ string) *EndpointDeletedEvent {
	this := EndpointDeletedEvent{}
	this.Data = data
	this.Type = type_
	return &this
}

// NewEndpointDeletedEventWithDefaults instantiates a new EndpointDeletedEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointDeletedEventWithDefaults() *EndpointDeletedEvent {
	this := EndpointDeletedEvent{}
	var type_ string = "endpoint.deleted"
	this.Type = type_
	return &this
}

// GetData returns the Data field value
func (o *EndpointDeletedEvent) GetData() EndpointDeletedEventData {
	if o == nil {
		var ret EndpointDeletedEventData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *EndpointDeletedEvent) GetDataOk() (*EndpointDeletedEventData, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *EndpointDeletedEvent) SetData(v EndpointDeletedEventData) {
	o.Data = v
}

// GetType returns the Type field value
func (o *EndpointDeletedEvent) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *EndpointDeletedEvent) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *EndpointDeletedEvent) SetType(v string) {
	o.Type = v
}

func (o EndpointDeletedEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableEndpointDeletedEvent struct {
	value *EndpointDeletedEvent
	isSet bool
}

func (v NullableEndpointDeletedEvent) Get() *EndpointDeletedEvent {
	return v.value
}

func (v *NullableEndpointDeletedEvent) Set(val *EndpointDeletedEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointDeletedEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointDeletedEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointDeletedEvent(val *EndpointDeletedEvent) *NullableEndpointDeletedEvent {
	return &NullableEndpointDeletedEvent{value: val, isSet: true}
}

func (v NullableEndpointDeletedEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointDeletedEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


