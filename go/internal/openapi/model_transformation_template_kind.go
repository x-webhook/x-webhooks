/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// TransformationTemplateKind the model 'TransformationTemplateKind'
type TransformationTemplateKind string

// List of TransformationTemplateKind
const (
	TRANSFORMATIONTEMPLATEKIND_CUSTOM TransformationTemplateKind = "Custom"
	TRANSFORMATIONTEMPLATEKIND_CUSTOMER_IO TransformationTemplateKind = "CustomerIO"
	TRANSFORMATIONTEMPLATEKIND_DISCORD TransformationTemplateKind = "Discord"
	TRANSFORMATIONTEMPLATEKIND_HUBSPOT TransformationTemplateKind = "Hubspot"
	TRANSFORMATIONTEMPLATEKIND_INNGEST TransformationTemplateKind = "Inngest"
	TRANSFORMATIONTEMPLATEKIND_SALESFORCE TransformationTemplateKind = "Salesforce"
	TRANSFORMATIONTEMPLATEKIND_SEGMENT TransformationTemplateKind = "Segment"
	TRANSFORMATIONTEMPLATEKIND_SLACK TransformationTemplateKind = "Slack"
	TRANSFORMATIONTEMPLATEKIND_TEAMS TransformationTemplateKind = "Teams"
	TRANSFORMATIONTEMPLATEKIND_TRIGGER_DEV TransformationTemplateKind = "TriggerDev"
	TRANSFORMATIONTEMPLATEKIND_WINDMILL TransformationTemplateKind = "Windmill"
	TRANSFORMATIONTEMPLATEKIND_ZAPIER TransformationTemplateKind = "Zapier"
)

var allowedTransformationTemplateKindEnumValues = []TransformationTemplateKind{
	"Custom",
	"CustomerIO",
	"Discord",
	"Hubspot",
	"Inngest",
	"Salesforce",
	"Segment",
	"Slack",
	"Teams",
	"TriggerDev",
	"Windmill",
	"Zapier",
}

func (v *TransformationTemplateKind) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TransformationTemplateKind(value)
	for _, existing := range allowedTransformationTemplateKindEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TransformationTemplateKind", value)
}

// NewTransformationTemplateKindFromValue returns a pointer to a valid TransformationTemplateKind
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTransformationTemplateKindFromValue(v string) (*TransformationTemplateKind, error) {
	ev := TransformationTemplateKind(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TransformationTemplateKind: valid values are %v", v, allowedTransformationTemplateKindEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TransformationTemplateKind) IsValid() bool {
	for _, existing := range allowedTransformationTemplateKindEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TransformationTemplateKind value
func (v TransformationTemplateKind) Ptr() *TransformationTemplateKind {
	return &v
}

type NullableTransformationTemplateKind struct {
	value *TransformationTemplateKind
	isSet bool
}

func (v NullableTransformationTemplateKind) Get() *TransformationTemplateKind {
	return v.value
}

func (v *NullableTransformationTemplateKind) Set(val *TransformationTemplateKind) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformationTemplateKind) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformationTemplateKind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformationTemplateKind(val *TransformationTemplateKind) *NullableTransformationTemplateKind {
	return &NullableTransformationTemplateKind{value: val, isSet: true}
}

func (v NullableTransformationTemplateKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformationTemplateKind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

