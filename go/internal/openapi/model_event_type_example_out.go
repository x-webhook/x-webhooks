/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EventTypeExampleOut struct for EventTypeExampleOut
type EventTypeExampleOut struct {
	Example map[string]map[string]interface{} `json:"example"`
}

// NewEventTypeExampleOut instantiates a new EventTypeExampleOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventTypeExampleOut(example map[string]map[string]interface{}) *EventTypeExampleOut {
	this := EventTypeExampleOut{}
	this.Example = example
	return &this
}

// NewEventTypeExampleOutWithDefaults instantiates a new EventTypeExampleOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventTypeExampleOutWithDefaults() *EventTypeExampleOut {
	this := EventTypeExampleOut{}
	return &this
}

// GetExample returns the Example field value
func (o *EventTypeExampleOut) GetExample() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Example
}

// GetExampleOk returns a tuple with the Example field value
// and a boolean to check if the value has been set.
func (o *EventTypeExampleOut) GetExampleOk() (*map[string]map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Example, true
}

// SetExample sets field value
func (o *EventTypeExampleOut) SetExample(v map[string]map[string]interface{}) {
	o.Example = v
}

func (o EventTypeExampleOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["example"] = o.Example
	}
	return json.Marshal(toSerialize)
}

type NullableEventTypeExampleOut struct {
	value *EventTypeExampleOut
	isSet bool
}

func (v NullableEventTypeExampleOut) Get() *EventTypeExampleOut {
	return v.value
}

func (v *NullableEventTypeExampleOut) Set(val *EventTypeExampleOut) {
	v.value = val
	v.isSet = true
}

func (v NullableEventTypeExampleOut) IsSet() bool {
	return v.isSet
}

func (v *NullableEventTypeExampleOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventTypeExampleOut(val *EventTypeExampleOut) *NullableEventTypeExampleOut {
	return &NullableEventTypeExampleOut{value: val, isSet: true}
}

func (v NullableEventTypeExampleOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventTypeExampleOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


