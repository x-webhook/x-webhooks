/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AppUsageStatsIn struct for AppUsageStatsIn
type AppUsageStatsIn struct {
	AppIds []string `json:"appIds,omitempty"`
	Since time.Time `json:"since"`
	Until time.Time `json:"until"`
}

// NewAppUsageStatsIn instantiates a new AppUsageStatsIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppUsageStatsIn(since time.Time, until time.Time) *AppUsageStatsIn {
	this := AppUsageStatsIn{}
	this.Since = since
	this.Until = until
	return &this
}

// NewAppUsageStatsInWithDefaults instantiates a new AppUsageStatsIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppUsageStatsInWithDefaults() *AppUsageStatsIn {
	this := AppUsageStatsIn{}
	return &this
}

// GetAppIds returns the AppIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppUsageStatsIn) GetAppIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.AppIds
}

// GetAppIdsOk returns a tuple with the AppIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppUsageStatsIn) GetAppIdsOk() (*[]string, bool) {
	if o == nil || o.AppIds == nil {
		return nil, false
	}
	return &o.AppIds, true
}

// HasAppIds returns a boolean if a field has been set.
func (o *AppUsageStatsIn) HasAppIds() bool {
	if o != nil && o.AppIds != nil {
		return true
	}

	return false
}

// SetAppIds gets a reference to the given []string and assigns it to the AppIds field.
func (o *AppUsageStatsIn) SetAppIds(v []string) {
	o.AppIds = v
}

// GetSince returns the Since field value
func (o *AppUsageStatsIn) GetSince() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Since
}

// GetSinceOk returns a tuple with the Since field value
// and a boolean to check if the value has been set.
func (o *AppUsageStatsIn) GetSinceOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Since, true
}

// SetSince sets field value
func (o *AppUsageStatsIn) SetSince(v time.Time) {
	o.Since = v
}

// GetUntil returns the Until field value
func (o *AppUsageStatsIn) GetUntil() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Until
}

// GetUntilOk returns a tuple with the Until field value
// and a boolean to check if the value has been set.
func (o *AppUsageStatsIn) GetUntilOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Until, true
}

// SetUntil sets field value
func (o *AppUsageStatsIn) SetUntil(v time.Time) {
	o.Until = v
}

func (o AppUsageStatsIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppIds != nil {
		toSerialize["appIds"] = o.AppIds
	}
	if true {
		toSerialize["since"] = o.Since
	}
	if true {
		toSerialize["until"] = o.Until
	}
	return json.Marshal(toSerialize)
}

type NullableAppUsageStatsIn struct {
	value *AppUsageStatsIn
	isSet bool
}

func (v NullableAppUsageStatsIn) Get() *AppUsageStatsIn {
	return v.value
}

func (v *NullableAppUsageStatsIn) Set(val *AppUsageStatsIn) {
	v.value = val
	v.isSet = true
}

func (v NullableAppUsageStatsIn) IsSet() bool {
	return v.isSet
}

func (v *NullableAppUsageStatsIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppUsageStatsIn(val *AppUsageStatsIn) *NullableAppUsageStatsIn {
	return &NullableAppUsageStatsIn{value: val, isSet: true}
}

func (v NullableAppUsageStatsIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppUsageStatsIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


