/*
 * Xwebhook API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MessageRawPayloadOut struct for MessageRawPayloadOut
type MessageRawPayloadOut struct {
	Payload string `json:"payload"`
}

// NewMessageRawPayloadOut instantiates a new MessageRawPayloadOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageRawPayloadOut(payload string) *MessageRawPayloadOut {
	this := MessageRawPayloadOut{}
	this.Payload = payload
	return &this
}

// NewMessageRawPayloadOutWithDefaults instantiates a new MessageRawPayloadOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageRawPayloadOutWithDefaults() *MessageRawPayloadOut {
	this := MessageRawPayloadOut{}
	return &this
}

// GetPayload returns the Payload field value
func (o *MessageRawPayloadOut) GetPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *MessageRawPayloadOut) GetPayloadOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *MessageRawPayloadOut) SetPayload(v string) {
	o.Payload = v
}

func (o MessageRawPayloadOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["payload"] = o.Payload
	}
	return json.Marshal(toSerialize)
}

type NullableMessageRawPayloadOut struct {
	value *MessageRawPayloadOut
	isSet bool
}

func (v NullableMessageRawPayloadOut) Get() *MessageRawPayloadOut {
	return v.value
}

func (v *NullableMessageRawPayloadOut) Set(val *MessageRawPayloadOut) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageRawPayloadOut) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageRawPayloadOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageRawPayloadOut(val *MessageRawPayloadOut) *NullableMessageRawPayloadOut {
	return &NullableMessageRawPayloadOut{value: val, isSet: true}
}

func (v NullableMessageRawPayloadOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageRawPayloadOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


